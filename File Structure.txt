multilingual/

â”œâ”€â”€ ðŸŸ¢ main.py                          # Main entry point
â”œâ”€â”€ ðŸŸ¢ telegram_bot.py                  # Telegram bot
â”œâ”€â”€ ðŸŸ¢ bot_core.py                      # Core RAG orchestrator
â”œâ”€â”€ ðŸŸ¢ config.py                        # Configuration
â”œâ”€â”€ ðŸŸ¢ language_utils.py                # Language detection
â”œâ”€â”€ ï¿½ï¿½ document_retriever.py            # Document retrieval
â”œâ”€â”€ ï¿½ï¿½ document_ranker.py               # Document ranking
â”œâ”€â”€ ï¿½ï¿½ response_generator.py            # Response generation
â”œâ”€â”€ ðŸŸ¢ rag_utils.py                     # RAG utilities
â”œâ”€â”€ ðŸŸ¢ delta_indexing.py                # Delta indexing
â”œâ”€â”€ ðŸŸ¢ docadd.py                        # Document processing
â”œâ”€â”€ ðŸŸ¢ index_manager.py                 # Index management
â”œâ”€â”€ ðŸŸ¢ pdf_preprocessor.py              # PDF preprocessing
â”œâ”€â”€ ðŸŸ¢ extract_pdf_text.py              # Text extraction
â”œâ”€â”€ ðŸŸ¢ setup_nltk.py                    # NLTK setup
â”œâ”€â”€ ðŸŸ¢ setup_ollama.py                  # Ollama setup
â”œâ”€â”€ ðŸŸ¢ requirements.txt                  # Dependencies
â”œâ”€â”€ ðŸŸ¢ README.md                         # Documentation
â”œâ”€â”€ ðŸŸ¢ .env                              # Environment variables
â”œâ”€â”€ ðŸŸ¢ data/                             # Document storage
â”œâ”€â”€ ðŸŸ¢ faiss_index/                     # Vector database
â””â”€â”€ ðŸŸ¢ logs/                             # Log files

1. Core Evaluation Files:

bertscore_evaluation.py - Main BERTScore evaluation system

comprehensive_evaluation.py - Multi-metric evaluation framework

evaluation_test_cases.json - Test cases for evaluation

rag_accuracy_evaluation_report.json - Evaluation results



2. Evaluation Utilities:

rag_file_analyzer.py - RAG pipeline analysis tools

RAG_eval.py - Main evaluation script (if it has content)
